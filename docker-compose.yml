---
version: '3'
services:
  freqtrade:
    build:
      context: freqtrade
      args:
        BINANCE_API_KEY: ${BINANCE_API_KEY}
        BINANCE_API_SECRET_KEY: ${BINANCE_API_SECRET_KEY}
        FREQ_API_PWD: ${FREQ_API_PWD}
    # image: freqtradeorg/freqtrade:develop
    # Build step - only needed when additional dependencies are needed
    # build:
    #   context: .
    #   dockerfile: "./Dockerfile.technical"
    restart: unless-stopped
    container_name: freqtrade
    ports:
      - "8080:8080"
    volumes:
      - "./freqtrade/user_data:/freqtrade/user_data"
    # Default command used when running `docker compose up`
    command: >
      trade
      --logfile /freqtrade/user_data/logs/freqtrade.log
      --db-url sqlite:////freqtrade/user_data/tradesv3.sqlite
      --config /tmp/config.json
      --dry-run 
      --strategy BbandRsi 
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl localhost:8080/api/v1/ping}"
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - freqtrade_net
  data_handler:
    build: 
      context: data_handler
      args:
        FREQ_API_PWD: ${FREQ_API_PWD}
    network_mode: host
    restart: always
  # logstash:
  #   build: logstash
  #   ports:
  #     - "5044:5044"
  #     - "9600:9600"
  #   networks:
  #     - freqtrade_net
  # kibana:
  #   image: kibana:7.6.2
  #   ports:
  #     - "5601:5601"
  #   environment:
  #     SERVER_NAME: localhost
  #     ELASTICSEARCH_URL: http://localhost:9200/
  #   networks:
  #     - freqtrade_net
  # elasticsearch:
  #   image: elasticsearch:7.6.2
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   environment:
  #     discovery.type: single-node
  #   networks:
  #     - freqtrade_net
networks:
  freqtrade_net:
